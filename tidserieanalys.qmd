---
title: "Marking guide assignment GLM"
author: "Jacob rak, William Lindquist. Aram Vardanian"
date: "`r Sys.Date()`"
output:
  pdf_document:
    toc: true
  html_document:
    toc: true
    toc_float: true
editor_options:
  markdown:
    wrap: 72
---

# Step 1 

Datasetet kommer från
[https://www.kaggle.com/datasets/vijayvvenkitesh/microsoft-stock-time-series-analysis](#0).
Datasetet är en tidserieanalys av Microsoft aktiken MSTF som är listad
på den amerikanska markanden. Uppgifterna hämtades från Google Sheets
med hjälp av "GOOGLEFINANCE".

```{r}
dataframe = read.csv("Microsoft_Stock.csv")
```

## Varibler

Datasetet har över 1511 observationer med 6 olika varibler.

-   Date(från 04/01/2015 till 04/01/2021)

-   Open(Pris vid öppning)

-   high(högst värdet för den dagen)

-   Low(lägsta priset)

-   Close(stängnings priset)

-   Volume(volymen av sålda aktiker)

## Periodictet

Periodiciteten av dataframen är dagligen.

## Val av varibler

För en robust och nyancerad analys kommer det framförallt används av
Open, high och low som hjälpvariblen och Close som huvudvarible.
Motiveringen följer, det finns en naturlig koppling mellan dessa för att
kunna förutspå aktien closing price från ett mänskligt perpektiv.

## Grafer 

```{r}
# Matrix
dataframe <- as.matrix(dataframe[, c("Open", "High", "Low", "Close", "Volume")])

microsoft_ts <- ts(dataframe, 
               start = c(2015, 4),  
               frequency = 365)

# Subset data
microsoft_ts_trimmed <- ts(
  microsoft_ts[1:(1511 - 30), ],       
  start = start(microsoft_ts),         
  frequency = frequency(microsoft_ts)  
)

```

```{r}
plot(microsoft_ts_trimmed, main="")

```

```{r}
plot(microsoft_ts_trimmed[, "Close"], 
     main = "Closing price over time",
     xlab = "date",
     ylab = "Closing price")
```

# Step 2 

## a)

Exponetial smoothing använder man holtwinters() med $Gamma = False$ och
$beta = False$ kommer ge en enkel expoential smoothing!

```{r}
close_ts <- microsoft_ts_trimmed[, "Close"]

exp_smoother <- HoltWinters(close_ts,alpha =0.1, beta = FALSE, gamma = FALSE)

plot(exp_smoother, main = "Exponential Smoothing - Closing Price", ylab = "Closing Price", xlab = "Date")

legend("topleft", legend = c("Original", "Exponential Values"), col = c("black", "red"), lty = 1)


```

## b)

Skapa en funktion som hittar rolling_forecast

```{r}
rolling_forecast <- function(
    data,
    first_pred = time(data)[length(data) - 30],
    last_pred = time(data)[length(data)],
    steps_ahead = 1
) {
    end <- first_pred - 1/365
    preds <- list()
    i <- 1
  
    while (end < (last_pred - 0.01)) {
        train <- window(data, end = end)
        model <- HoltWinters(train)
        preds[[i]] <- predict(model, n.ahead = steps_ahead)
        end <- end + 1/365
        i <- i + 1
    }
  
    all_preds <- ts(
        unlist(preds),
        start = first_pred,
        frequency = frequency(data)
    )
  
    return(all_preds)
}
```

Predict på datan

```{r, message=FALSE, warning=FALSE}
microsoft_ts_rolling <- microsoft_ts[, 1]
forecast <- rolling_forecast(
    data=microsoft_ts_rolling,
    steps_ahead = 1
)
forecast_hS <- rolling_forecast(
    data = microsoft_ts_rolling,
    steps_ahead = 4
)
```

Plotting forecast

```{r}
plot(forecast)
plot(forecast_hS)
```

Räknar ut båda RMSE och MAD

```{r}
microsoft_ts_trimmed_last_30 <- ts(
  microsoft_ts[1482:1511, ],       
  start = start(microsoft_ts),         
  frequency = frequency(microsoft_ts)  
)


calc_metrics <- function(actual, predicted) {
    rmse <- sqrt(mean((actual - predicted)^2, na.rm = TRUE))
    mad <- mean(abs(actual - predicted), na.rm = TRUE)
    list(RMSE = rmse, MAD = mad)
}


metrics0 <- calc_metrics(actual = microsoft_ts_trimmed_last_30[,1][1:28], predicted = forecast)
metrics0
metrics1 <- calc_metrics(actual = microsoft_ts_trimmed_last_30[,1][1:28], predicted = forecast_hS[1:28])
metrics1
```

OBS något gick fel använd 28 istället

## c) 
